version: "3.7"

services:
  # ====================================================================================================================
  # JAVA SERVER - USING MULTI-STAGE BUILD
  # ====================================================================================================================
  games:
    build:
      context: ./
      dockerfile: docker/Dockerfile
      args:
        JAVA_SERVER_PORT: ${JAVA_SERVER_PORT}
    container_name: games-app
    ports:
      - "${JAVA_SERVER_PORT:-9000}:${JAVA_SERVER_PORT:-9000}"
    environment:
      - JAVA_SERVER_PORT=${JAVA_SERVER_PORT:-9000}
    restart: unless-stopped

  # ====================================================================================================================
  # POSTGRES SERVER
  # ====================================================================================================================
  pg-docker:
    image: postgres:15-alpine
    container_name: dev-postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
      POSTGRES_USER: ${POSTGRES_USER:-devuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1234567}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dev-network

  # ====================================================================================================================
  # PGADMIN
  # ====================================================================================================================
  pgadmin-docker:
    image: dpage/pgadmin4
    container_name: dev-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-me@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-1234567}
    ports:
      - "5050:80"
    volumes:
      - ./.data/postgresql/data:/var/lib/pgadmin
    depends_on:
      - pg-docker
    networks:
      - dev-network

# ======================================================================================================================
# NETWORK
# ======================================================================================================================
networks:
  dev-network:
    driver: bridge

# ======================================================================================================================
# VOLUMES
# ======================================================================================================================
volumes:
  pgdata: